desc: bitutils V2 ALPHA

slider1:0<0,2,1{Manual,Auto Slow,Auto Fast}>Mode
slider2:16<8,24,1>Bits
slider3:0<-4,4,1>Shift
slider4:6<1,16,1>Channels
slider5:1024<8,24,1>Actual bits
slider6:0.1<0.05,0.5,0.05>Response

@init
count=0;


// bitz=0;
multiply=0;

loudness_LT=0;
loudness_LT_ALL=99;
loudness_IM=100;
loudness_IM_ALL=0;

bits=200;
multiply=300;


@slider
blocksize=4096;
// blocksize=slider5;

// response=slider4;

// bits=slider2;
// multiply=2^(slider2-1);

chans=slider4;
shift=2^slider3;

@block
count+=samplesblock;
n = 0;
(count>blocksize)?
(	
	n = 0;
	loudness_IM_ALL=0;
	
	loop //make an average of all chans
	(chans,
		
		loudness_IM_ALL+=loudness_IM[n]/(chans-0.5); //cuz LFE is too quiet
		n+=1;
	
	);
	n = 0;
	loop //calculate the bits based on difference to average
	(chans,
		bits[n]=floor(loudness_IM_ALL*slider2/loudness_IM[n]);
		bits[n]=max(min(bits[n],slider2+1),slider2-1);
		slider5=bits[1];
		sliderchange(slider5);
		multiply[n]=2^(bits[n]-1);
		loudness_IM[n]=0;
		n+=1;
	);
	count=0;

);




@sample
m = 0;

//add all chans to a temp
loop(chans,

	loudness_IM[m]+=abs(spl(m));
	spl(m)=floor(spl(m)*multiply[m]+0.5)*(1/multiply[m])*shift;
	
	m+=1;
);

@gfx 500 100
box_width=gfx_w/(chans*1.2);
function drawbox(x,y)
(
	gfx_x=x-box_width/2;
	gfx_y=y-box_width/2;
	gfx_rectto(x+box_width/2,y+box_width/2)
);

//code for ASCII
gfx_x=gfx_y=16;
gfx_a = 0.8;
gfx_r = gfx_g = gfx_b = 1;

g=0;

loop(chans,

	// gfx_drawchar(bits[g]+64);//draw ASCII
	gfx_a = 0.6;
	bits[g]>slider2?gfx_a = 0.4;
	bits[g]<slider2?gfx_a = 0.8;
	drawbox((g*1.2*box_width)+(box_width/2),0); //1+0.2 cuz add gap

	g+=1;
);